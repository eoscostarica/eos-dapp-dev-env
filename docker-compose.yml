version: '3.5'

services:

  eosio:
    container_name: eoslocal_eosio
    build:
      context: ./services/eosio
      dockerfile: Dockerfile
      args:
        symbol: EOS
    image: eoslocal/eosio
    stop_grace_period: 3m0s
    ports:
      - '8888:8888'
      - '9830:9876'
    environment:
      DATA_DIR: /root/data-dir
      CONFIG_DIR: /opt/application/config
      VIRTUAL_HOST: eosio.eoslocal.io
      VIRTUAL_PORT: 8888
    volumes:
      - eosio-data-volume:/root/data-dir
      - ./services/eosio:/opt/application
      - ./contracts:/opt/application/contracts
    depends_on:
      - mongo
    links:
      - 'eos-wallet:eos-wallet'
    networks:
      eoslocal:
        aliases:
          - eosio.eoslocal.io

  eos-wallet:
    container_name: eoslocal_eos-wallet
    image: eosio/eos:v1.4.4
    command: /opt/eosio/bin/keosd --wallet-dir /opt/eosio/bin/data-dir --http-server-address=0.0.0.0:8901 --http-alias=eos-wallet.eoslocal:8901 --http-validate-host 0 --verbose-http-errors
    hostname: eos-wallet
    expose:
      - 8901
    ports:
      - '8901:8901'
    volumes:
      - keosd-data-volume:/opt/eosio/bin/data-dir
    environment:
      VIRTUAL_HOST: eos-wallet.eoslocal.io
      VIRTUAL_PORT: 8901
    networks:
      eoslocal:
        aliases:
          - keosd.eoslocal.io

  mongo:
    container_name: eoslocal_mongo
    image: mongo
    restart: always
    volumes:
      - ./services/mongo/.dbdata/.mongo-data:/data/db
    ports:
      - '27017:27017'
    environment:
      VIRTUAL_HOST: mongo.eoslocal.io
      VIRTUAL_PORT: 27017
    networks:
      eoslocal:
        aliases:
          - mongo.eoslocal.io

  ipfs:
    container_name: eoslocal_ipfs
    image: jbenet/go-ipfs:latest
    restart: always
    ports:
          - "4001:4001"
          - "5001:5001"
          - "8081:8080"
    volumes:
      - ./services/ipfs:/data/ipfs/

  # nginx reverse proxy that allows accesing the services directly on the host machine
  # the wildcard *.esolocal.io that points to 127.0.0.1,
  # therefore as long as you can hit the dns server it will redirect all requests to your machine
  # and nginx-proxy does the internal docker network routing to the right service
  nginx-proxy:
    container_name: eoslocal_nginx-proxy
    image: jwilder/nginx-proxy:alpine
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      eoslocal:

volumes:
  eosio-data-volume:
  keosd-data-volume:
    external: true # set false to delete wallet

networks:
  eoslocal:
    name: eoslocal
